using Patreon.Api.V2.Resources;
using System;
using System.Collections.Generic;

namespace Patreon.Api.V2.Core.Resources
{
    public interface IBenefit : IPatreonResource<int>
    {
        /// <summary> The display title of the benefit.</summary>
        string Title { get; }
        /// <summary> The display description of the benefit.</summary>
        string Description { get; }
        /// <summary> Type of benefit.</summary>
        string BenefitType {get;}
        /// <summary> A rule type designation.</summary>
        string RuleType { get; }
        /// <summary> The time the benefit was created.</summary>
        DateTime CreatedAt { get; }
        /// <summary> The number of deliverables for this benefit that have been marked completed.</summary>
        int DeliveredDeliverablesCount { get; }
        /// <summary> The number of deliverables for this benefit that are due for all dates.</summary>
        int NotDeliveredDeliverablesCount { get; }
        /// <summary> The number of deliverables for this benefit that are due for today.</summary>
        int DeliverablesDueTodayCount { get; }
        /// <summary> The next due date for this benefit.</summary>
        DateTime? NextDeliverableDueDate { get; }
        /// <summary> The number of tiers containing this benefit.</summary>
        int TiersCount { get; }
        /// <summary> Determines if this benefit has been marked as deleted.</summary>
        bool IsDeleted { get; }
        /// <summary> Determines if this benefit has been marked as published.</summary>
        bool IsPublished { get; }
        /// <summary> Determines if this benefit is no longer available to new patrons.</summary>
        bool IsEnded { get; }
        /// <summary> The third-party external ID this reward is associated with, if any.</summary>
        string AppExternalId { get; }
        /// <summary> the metadata the third-party app included with this benefit on creation.</summary>
        string AppMeta { get; }

        /// <summary> The tiers the benefit has been added to.</summary>
        IReadOnlyCollection<Tier> Tiers { get; }
        /// <summary> The deliverables that have been generated by the benefit.</summary>
        IReadOnlyCollection<Deliverable> Deliverables { get; }
        /// <summary> The campaign the benefit belongs to.</summary>
        Campaign Campaign { get; }
    }
}
